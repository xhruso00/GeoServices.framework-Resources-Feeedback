// This file was automatically generated by gyb
// DO NOT EDIT!
// Compiled from reportaproblem.proto

#import "GEORPFeatureHandleStyleAttribute.h"
#import <ProtocolBuffer/PBConstants.h>
#import <ProtocolBuffer/PBHashUtil.h>
#import <ProtocolBuffer/PBDataReader.h>

#if !__has_feature(objc_arc)
# error This generated file depends on ARC but it is not enabled
#endif


NSString *GEORPFeatureHandleStyleAttributeDescription(const GEORPFeatureHandleStyleAttribute *self)
{
    return [NSString stringWithFormat:@"GEORPFeatureHandleStyleAttribute<%p> %@", self, GEORPFeatureHandleStyleAttributeDictionaryRepresentation(self)];
}

NSDictionary<NSString *, id> *GEORPFeatureHandleStyleAttributeDictionaryRepresentation(const GEORPFeatureHandleStyleAttribute *self)
{
    NSMutableDictionary<NSString *, id> *dict = [NSMutableDictionary dictionary];
    [dict setObject:@(self->_key) forKey:@"key"];
    [dict setObject:@(self->_value) forKey:@"value"];
    return dict;
}

void GEORPFeatureHandleStyleAttributeFromDictionaryRepresentation(NSDictionary<NSString *, id> *dict, GEORPFeatureHandleStyleAttribute *self)
{
    {
        id value = dict[@"key"];
        if (value != nil)
        {
            self->_key = [value intValue];
        }
    }
    {
        id value = dict[@"value"];
        if (value != nil)
        {
            self->_value = [value intValue];
        }
    }
}


id GEORPFeatureHandleStyleAttributeReadValueForKeyPath(NSString *keyPath, __unsafe_unretained PBDataReader *reader)
{
    if (keyPath.length == 0) {
        return nil;
    }
    PBDataReaderMark resetMark;
    resetMark.pos = reader.position;
    resetMark.length = reader.length;
    #define returnValue(X) do { \
        const id v = X; \
        PBReaderRecallMark(reader, &resetMark); \
        return v; \
    } while(0)

    NSUInteger dot = [keyPath rangeOfString:@"."].location;
    __attribute__((unused)) NSString *key, *nextKey;
    if (dot == NSNotFound) {
        key = keyPath;
        nextKey = nil;
    } else {
        key = [keyPath substringToIndex:dot];
        nextKey = [keyPath substringFromIndex:dot+1];
    }

    while (PBReaderHasMoreData(reader)) {
        uint32_t tag = 0;
        uint8_t aType = 0;

        PBReaderReadTag32AndType(reader, &tag, &aType);

        if (PBReaderHasError(reader))
            break;

        if (aType == TYPE_END_GROUP) {
            break;
        }
    
        switch (tag) {

            case 1 /* key */:
                if (![key isEqualToString:@"value"]) {
                    if (!PBReaderSkipValueWithTag(reader, tag, aType))
                        returnValue(nil);
                } else {
                    returnValue(@(PBReaderReadInt32(reader)));
                }
                break;
            case 2 /* value */:
                if (![key isEqualToString:@"key"]) {
                    if (!PBReaderSkipValueWithTag(reader, tag, aType))
                        returnValue(nil);
                } else {
                    returnValue(@(PBReaderReadInt32(reader)));
                }
                break;
            default:
                if (!PBReaderSkipValueWithTag(reader, tag, aType))
                    returnValue(nil);
                break;
        }
    }
    returnValue(nil);
    #undef returnValue
}

BOOL GEORPFeatureHandleStyleAttributeReadFrom(GEORPFeatureHandleStyleAttribute *self, __unsafe_unretained PBDataReader *reader)
{
    return GEORPFeatureHandleStyleAttributeReadAllFrom(self, reader, NO);
}

BOOL GEORPFeatureHandleStyleAttributeReadAllFrom(GEORPFeatureHandleStyleAttribute *self, __unsafe_unretained PBDataReader *reader, BOOL recursively)
{
    while (PBReaderHasMoreData(reader)) {
        uint32_t tag = 0;
        uint8_t aType = 0;

        PBReaderReadTag32AndType(reader, &tag, &aType);

        if (PBReaderHasError(reader))
            break;

        if (aType == TYPE_END_GROUP) {
            break;
        }
	
    	switch (tag) {	

            case 1 /* key */:
            {
                self->_key = PBReaderReadInt32(reader);
            }
            break;
            case 2 /* value */:
            {
                self->_value = PBReaderReadInt32(reader);
            }
            break;
            default:
                if (!PBReaderSkipValueWithTag(reader, tag, aType))
                    return NO;
                break;
        }
    }
    return !PBReaderHasError(reader);
}

void GEORPFeatureHandleStyleAttributeWriteTo(const GEORPFeatureHandleStyleAttribute *self, __unsafe_unretained PBDataWriter *writer)
{
    /* key */
    {
        PBDataWriterWriteInt32Field(writer, self->_key, 1);
    }
    /* value */
    {
        PBDataWriterWriteInt32Field(writer, self->_value, 2);
    }
}

BOOL GEORPFeatureHandleStyleAttributeEquals(const GEORPFeatureHandleStyleAttribute *a, const GEORPFeatureHandleStyleAttribute *b)
{
    return 0 == (memcmp(a, b, sizeof(GEORPFeatureHandleStyleAttribute)));
}

GEORPFEATUREHANDLESTYLEATTRIBUTE_FUNCTION NSUInteger GEORPFeatureHandleStyleAttributeHash(const GEORPFeatureHandleStyleAttribute *self)
{
    return PBHashBytes(self, sizeof(GEORPFeatureHandleStyleAttribute));
}

BOOL GEORPFeatureHandleStyleAttributeIsValid(__unsafe_unretained PBDataReader *reader)
{
    PBDataReaderMark resetMark;
    resetMark.pos = reader.position;
    resetMark.length = reader.length;
    GEORPFeatureHandleStyleAttribute Self;
    BOOL result = GEORPFeatureHandleStyleAttributeReadAllFrom(&Self, reader, YES);
    PBReaderRecallMark(reader, &resetMark);
    return result;
}


