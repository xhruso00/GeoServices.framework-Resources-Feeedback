// This file was automatically generated by gyb
// DO NOT EDIT!
// Compiled from community_feedback.proto

#import "GEORPFeedbackConversation.h"
#import <ProtocolBuffer/PBConstants.h>
#import <ProtocolBuffer/PBHashUtil.h>
#import <ProtocolBuffer/PBDataReader.h>

#import <GeoServices/GEORPFeedbackConversationMessage.h>

#if !__has_feature(objc_arc)
# error This generated file depends on ARC but it is not enabled
#endif

@implementation GEORPFeedbackConversation


- (NSMutableArray<GEORPFeedbackConversationMessage *> *)messages
{
    return _messages;
}
- (void)setMessages:(NSMutableArray<GEORPFeedbackConversationMessage *> *)v
{
    _messages = v;
}
- (void)clearMessages
{
    [_messages removeAllObjects];
}
- (void)addMessage:(GEORPFeedbackConversationMessage *)i
{
    if (!_messages)
    {
        _messages = [[NSMutableArray alloc] init];
    }
    [_messages addObject:i];
}
- (NSUInteger)messagesCount
{
    return [_messages count];
}
- (GEORPFeedbackConversationMessage *)messageAtIndex:(NSUInteger)idx
{
    return [_messages objectAtIndex:idx];
}
+ (Class)messageType
{
    return [GEORPFeedbackConversationMessage class];
}


- (NSString *)description
{
    return [NSString stringWithFormat:@"%@ %@", [super description], [self dictionaryRepresentation]];
}

- (NSDictionary *)dictionaryRepresentation
{
    [self readAll:YES];
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    if ([self->_messages count])
    {
        NSMutableArray *messagesDictReprs = [[NSMutableArray alloc] initWithCapacity:[self->_messages count]];
        for (GEORPFeedbackConversationMessage * i_message in self->_messages)
        {
            [messagesDictReprs addObject:[i_message dictionaryRepresentation]];
        }
        [dict setObject:messagesDictReprs forKey:@"message"];
    }


    if (_unknownFields)
        [dict setObject:[_unknownFields dictionaryRepresentation] forKey:@"Unknown Fields"];

    return dict;
}


#define TAG_PARSE_ALL_RECURSIVE     (UINT32_MAX)
#define TAG_PARSE_ALL_NON_RECURSIVE (UINT32_MAX-1)
#define TAG_PARSE_INITIAL           (UINT32_MAX-2)
#define TAG_UNKNOWN_FIELDS          (UINT32_MAX-3)

- (void)readAll:(BOOL)recursively { /* noop */ }
BOOL GEORPFeedbackConversationReadAllFrom(__unsafe_unretained GEORPFeedbackConversation *self, __unsafe_unretained PBDataReader *reader, BOOL recursively) {
    static const uint32_t recursiveTag[] = {TAG_PARSE_ALL_RECURSIVE, 0};

    @synchronized(reader) {
        BOOL result = GEORPFeedbackConversationReadSpecified(self, reader, recursively ? recursiveTag : nil);
        return result;
    }
}
BOOL GEORPFeedbackConversationReadFrom(__unsafe_unretained GEORPFeedbackConversation *self, __unsafe_unretained PBDataReader *reader) {
    @synchronized(reader) {
        return GEORPFeedbackConversationReadAllFrom(self, reader, NO);
    }
}

BOOL GEORPFeedbackConversationReadSpecified(__unsafe_unretained GEORPFeedbackConversation *self, __unsafe_unretained PBDataReader *reader, const uint32_t *tags) {
    if (reader == nil) {
        return NO;
    }
    #define shouldParseUnknown YES
    __attribute__((unused)) BOOL const recursively = (tags != nil && tags[0] == TAG_PARSE_ALL_RECURSIVE);
    while (PBReaderHasMoreData(reader)) {
        uint32_t tag = 0;
        uint8_t aType = 0;
        PBReaderReadTag32AndType(reader, &tag, &aType);

        if (PBReaderHasError(reader))
            break;

        if (aType == TYPE_END_GROUP) {
            break;
        }
        
    #define shouldParseTag YES

        switch (tag) {

            case 1 /* messages */:
            {
                GEORPFeedbackConversationMessage *new_message = [[GEORPFeedbackConversationMessage alloc] init];
                [self addMessage:new_message];
                PBDataReaderMark mark_message;
                BOOL markError = !PBReaderPlaceMark(reader, &mark_message);
                if (markError)
                {
                    return NO;
                }
                BOOL inError = !GEORPFeedbackConversationMessageReadAllFrom(new_message, reader, recursively);
                if (inError)
                {
                    return NO;
                }
                PBReaderRecallMark(reader, &mark_message);

            }
            break;
            default:
                if (!self->_unknownFields)
                    self->_unknownFields = [[PBUnknownFields alloc] init];
                if (!PBUnknownFieldAdd(self->_unknownFields, tag, aType, reader))
                    return NO;
                break;
        }
    }



    #undef shouldParseTag
    #undef shouldParseUnknown
    #undef recursively
    return !PBReaderHasError(reader);
}

+ (BOOL)isValid:(__unsafe_unretained PBDataReader *)reader
{
    return GEORPFeedbackConversationIsValid(reader);
}

BOOL GEORPFeedbackConversationIsValid(__unsafe_unretained PBDataReader *reader) {
    PBDataReaderMark resetMark;
    resetMark.pos = reader.position;
    resetMark.length = reader.length;
    #define returnValue(X) do { \
        const BOOL v = X; \
        PBReaderRecallMark(reader, &resetMark); \
        return v; \
    } while(0)
    while (PBReaderHasMoreData(reader)) {
        uint32_t tag = 0;
        uint8_t aType = 0;
        PBReaderReadTag32AndType(reader, &tag, &aType);

        if (PBReaderHasError(reader))
            break;

        if (aType == TYPE_END_GROUP) {
            break;
        }

        switch (tag) {

            case 1 /* messages */:
                if (TYPE_LENGTH_DELIMITED != aType)
                    returnValue(NO);
                {
                    PBDataReaderMark mark_message;
                    if (!PBReaderPlaceMark(reader, &mark_message))
                        returnValue(NO);
                    if (!GEORPFeedbackConversationMessageIsValid(reader))
                        returnValue(NO);
                    PBReaderRecallMark(reader, &mark_message);
                }
                break;
            default:
                if (!PBReaderSkipValueWithTag(reader, tag, aType))
                    returnValue(NO);
                break;
        }
    }
    returnValue(!PBReaderHasError(reader));
    #undef returnValue
}

- (BOOL)readFrom:(PBDataReader *)reader
{
    return GEORPFeedbackConversationReadAllFrom(self, reader, NO);
}

- (void)writeTo:(PBDataWriter *)writer
{

    /* messages */
    {
        for (GEORPFeedbackConversationMessage * i_message in self->_messages)
        {
            PBDataWriterWriteSubmessage(writer, i_message, 1);
        }

    }
    /* Unknown Fields */
    {
        [_unknownFields writeTo:writer];
    }
}



- (void)copyTo:(GEORPFeedbackConversation *)other
{
    [self readAll:NO];
    if ([self messagesCount])
    {
        [other clearMessages];
        NSUInteger messagesCnt = [self messagesCount];
        for (NSUInteger i = 0; i < messagesCnt; i++)
        {
            [other addMessage:[self messageAtIndex:i]];
        }
    }
}

- (id)copyWithZone:(NSZone *)zone
{
    GEORPFeedbackConversation *copy = [[[self class] allocWithZone:zone] init];
    for (GEORPFeedbackConversationMessage * v in _messages)
    {
        GEORPFeedbackConversationMessage * vCopy = [v copyWithZone:zone];
        [copy addMessage:vCopy];
    }
    copy->_unknownFields = _unknownFields;
    return copy;
}


- (BOOL)isEqual:(id)object
{
    GEORPFeedbackConversation *other = (GEORPFeedbackConversation *)object;
    if (![other isMemberOfClass:[self class]]) {
        return NO;
    }
    [self readAll:YES];
    [other readAll:YES];


    return YES
    &&
    ((!self->_messages && !other->_messages) || [self->_messages isEqual:other->_messages])

    ;
}

- (NSUInteger)hash
{
    [self readAll:YES];
    NSUInteger value = 0;

    return value
    ^
    [self->_messages hash]
    ;
}

- (void)mergeFrom:(GEORPFeedbackConversation *)other
{
    [other readAll:NO];
    for (GEORPFeedbackConversationMessage * iter_messages in other->_messages)
    {
        [self addMessage:iter_messages];
    }
}

- (PBUnknownFields *)unknownFields
{
    return _unknownFields;
}
- (void)clearUnknownFields:(BOOL)recursively
{
    _unknownFields = nil;
    if (!recursively) {
        return;
    }
    [self readAll:NO];
    for (GEORPFeedbackConversationMessage * v in self.messages) {
        [v clearUnknownFields:YES];
    }
}

@end


